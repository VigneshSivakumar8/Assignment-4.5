1. CHECKSUM :-
              Checksums are used to ensure the integrity of a file after it has been transmitted from one storage device to another. This 
       can be across the Internet or simply between two computers on the same network. Either way, if you want to ensure that the
       transmitted file is exactly the same as the source file, you can use a checksum.
              The checksum is calculated using a hash function and is normally posted along with the download. To verify the integrity of
       the file, a user calculates the checksum using a checksum calculator program and then compares the two to make sure they match.          
              Checksums are used not only to ensure a corrupt-free transmission, but also to ensure that the file has not been tampered 
       with. When a good checksum algorithm is used, even a tiny change to the file will result in a completely different checksum value.
              LocalFileSystem uses ChecksumFileSystem to do its work, and this class makes it easy to add checksumming to other
       (nonchecksummed) filesystems, as ChecksumFileSystem is just a wrapper around FileSystem. The general idiom is as follows:
                                            FileSystem rawFs = ... 
                                            FileSystem checksummedFs = new ChecksumFileSystem(rawFs);
              The underlying filesystem is called the raw filesystem, and may be retrieved using the getRawFileSystem() method on
       ChecksumFileSystem. ChecksumFileSystem has a few more useful methods for working with checksums, such as getChecksumFile() for 
       getting the path of a checksum file for any file. Check the documentation for the others. If an error is detected by 
       ChecksumFileSystem when reading a file, it will call its reportChecksumFailure() method. The default implementation does nothing,
       but LocalFileSystem moves the offending file and its checksum to a side directory on the same device called bad_files. 
       Administrators should periodically check for these bad files and take action on them.
       
2.        
